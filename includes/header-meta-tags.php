<?php

/*
 * Create twitter card and open graph tags
 */

class MASHSB_HEADER_META_TAGS {

    protected $postID;
    protected $imageURL;

    private function __construct() {
        // Die when $post is not set
        if( get_the_ID() === false ) {
            return;
        }

        $this->postID = get_the_ID;
        $this->imageURL = $this->get_image_url();

        add_action( 'wp_head', array($this, 'mashsb_add_header_meta'), 1 );
        add_filter( 'mashsb_meta_tags', 'mashsb_open_graph_tags', 1 );
        add_filter( 'mashsb_meta_tags', 'mashsb_add_twitter_card', 2 );
    }

    /**
     * Get image url
     * 
     * @return mixed string with 
     */
    private function get_image_url() {
        $imgID = get_post_meta( $this->postID, 'mashsb_ogImage', true );
        if( $imgID ) {
            return rawurlencode( wp_get_attachment_url( $imgID ) );
        }
        // custom og image not defined, return post thumbnail. This function will not urlencode the url. 
        // If you have attachments with invalid characters in their name, 
        // you should rawurlencode the ouput of this function in order to have a valid url.
        return rawurlencode( wp_get_attachment_url( get_post_thumbnail_id( $this->postID ) ) );
    }

    private function mashsb_add_header_meta() {

        // Create the image Open Graph Meta Tag
        $info['title'] = htmlspecialchars( get_post_meta( $this->postID, 'nc_ogTitle', true ) );
        $info['description'] = htmlspecialchars( get_post_meta( $this->postID, 'nc_ogDescription', true ) );
        $info['mashsb_fb_author'] = htmlspecialchars( get_post_meta( $this->postID, 'mashsb_fb_author', true ) );
        $info['mashsb_user_options'] = mashsb_get_user_options();
        $info['user_twitter_handle'] = $user_twitter_handle;
        $info['header_output'] = '';

        $info = apply_filters( 'mashsb_meta_tags', $info );

        if( $info['header_output'] ):
            echo PHP_EOL . '<!-- Open Graph Meta Tags & Twitter Card generated by MashShare v' . MASHSB_VERSION . ' https://mashshare.net -->';
            echo $info['header_output'];
            echo PHP_EOL . '<!-- Open Graph Meta Tags & Twitter Card generated by MashShare v' . MASHSB_VERSION . ' http://mashshare.net -->' . PHP_EOL . PHP_EOL;
        endif;
    }

    /**
     * Return special quote characters
     * 
     * @param string $content
     * @todo write a test
     * @return string
     */
    private function replace_quote_characters( $string ) {
        $string = str_replace( '"', '\'', $string );
        $string = str_replace( '&#8216;', '\'', $string );
        $string = str_replace( '&#8217;', '\'', $string );
        $string = str_replace( '&#8220;', '\'', $string );
        $string = str_replace( '&#8221;', '\'', $string );
        return $content;
    }

}

// Disable Simple Podcast Press Open Graph tags
if( is_plugin_active( 'simple-podcast-press/simple-podcast-press.php' ) ) {
    global $ob_wp_simplepodcastpress;
    remove_action( 'wp_head', array($ob_wp_simplepodcastpress, 'spp_open_graph'), 1 );
}

/* * ***************************************************************
 *                                                                *
 *   Open Graph Tags										         *
 *                                                                *
 * 	Dev Notes: If the user specifies an Open Graph tag,			 *
 * 	we're going to develop a complete set of tags. Order		 *
 * 	of preference for each tag is as follows:					 *
 * 	1. Did they fill out our open graph field?					 *
 * 	2. Did they fill out Yoast's social field?					 *
 * 	3. Did they fill out Yoast's SEO field?						 *
 * 	4. We'll just auto-generate the field from the post.		 *
 * **************************************************************** */

function mashsb_open_graph_tags( $info ) {

    // We only modify the Open Graph tags on single blog post pages
    if( is_singular() ):

        // If Yoast Open Graph is activated, we only output Open Graph tags if the user has filled out at least one field
        // Then we'll work along with Yoast to make sure all fields get filled properly
        if( defined( 'WPSEO_VERSION' ) ):
            global $wpseo_og;
            $yoast_og_setting = has_action( 'wpseo_head', array($wpseo_og, 'opengraph') );
        else:
            $yoast_og_setting = false;
        endif;

        if(
                (isset( $info['title'] ) && $info['title']) ||
                (isset( $info['description'] ) && $info['description']) ||
                (isset( $info['imageURL'] ) && $info['imageURL']) ||
                !$yoast_og_setting
        ):

            /*             * ***************************************************************
             *                                                                *
             *     YOAST SEO: It rocks, so let's coordinate with it	         *
             *                                                                *
             * **************************************************************** */

            // Check if Yoast Exists so we can coordinate output with their plugin accordingly
            if( defined( 'WPSEO_VERSION' ) ):

                // Collect their Social Descriptions as backups if they're not defined in ours
                $yoast_og_title = get_post_meta( $this->postID, '_yoast_wpseo_opengraph-title', true );
                $yoast_og_description = get_post_meta( $this->postID, '_yoast_wpseo_opengraph-description', true );
                $yoast_og_image = get_post_meta( $this->postID, '_yoast_wpseo_opengraph-image', true );

                // Collect their SEO fields as 3rd string backups in case we need them
                $yoast_seo_title = get_post_meta( $this->postID, '_yoast_wpseo_title', true );
                $yoast_seo_description = get_post_meta( $this->postID, '_yoast_wpseo_metadesc', true );

                // Cancel their output if ours have been defined so we don't have two sets of tags
                global $wpseo_og;
                remove_action( 'wpseo_head', array($wpseo_og, 'opengraph'), 30 );

                // Fetch the WPSEO_SOCIAL Values
                $wpseo_social = get_option( 'wpseo_social' );

            endif;

            // Add all our Open Graph Tags to the Return Header Output
            $info['header_output'] .= PHP_EOL . '<meta property="og:type" content="article" /> ';

            /*             * ***************************************************************
             *                                                                *
             *     JETPACK: If ours are enabled, disable theirs		         *
             *                                                                *
             * **************************************************************** */

            if( class_exists( 'JetPack' ) ) :
                add_filter( 'jetpack_enable_opengraph', '__return_false', 99 );
                add_filter( 'jetpack_enable_open_graph', '__return_false', 99 );
            endif;

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH TITLE									         *
             *                                                                *
             * **************************************************************** */

            // Open Graph Title: Create an open graph title meta tag
            if( $info['title'] ):

                // If the user defined an social media title, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:title" content="' . $info['title'] . '" />';

            elseif( isset( $yoast_og_title ) && $yoast_og_title ):

                // If the user defined an title over in Yoast, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:title" content="' . $yoast_og_title . '" />';

            elseif( isset( $yoast_seo_title ) && $yoast_seo_title ):

                // If the user defined an title over in Yoast, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:title" content="' . $yoast_seo_title . '" />';

            else:

                // If nothing else is defined, let's use the post title
                $info['header_output'] .= PHP_EOL . '<meta property="og:title" content="' . convert_smart_quotes( htmlspecialchars_decode( get_the_title() ) ) . '" />';

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH DESCRIPTION							         *
             *                                                                *
             * **************************************************************** */

            // Open Graph Description: Create an open graph description meta tag
            if( $info['description'] ):

                // If the user defined an social media description, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:description" content="' . $info['description'] . '" />';

            elseif( isset( $yoast_og_description ) && $yoast_og_description ):

                // If the user defined an description over in Yoast, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:description" content="' . $yoast_og_description . '" />';

            elseif( isset( $yoast_seo_description ) && $yoast_seo_description ):

                // If the user defined an description over in Yoast, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:description" content="' . $yoast_seo_description . '" />';

            else:

                // If nothing else is defined, let's use the post excerpt
                $info['header_output'] .= PHP_EOL . '<meta property="og:description" content="' . convert_smart_quotes( htmlspecialchars_decode( mashsb_get_excerpt_by_id( $this->postID ) ) ) . '" />';

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH IMAGE									         *
             *                                                                *
             * **************************************************************** */

            // Open Graph Image: Create an open graph image meta tag
            if( $info['imageURL'] ):

                // If the user defined an image, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:image" content="' . $info['imageURL'] . '" />';

            elseif( isset( $yoast_og_image ) && $yoast_og_image ):

                // If the user defined an image over in Yoast, let's use it.
                $info['header_output'] .= PHP_EOL . '<meta property="og:image" content="' . $yoast_og_image . '" />';

            else:

                // If nothing else is defined, let's use the post Thumbnail as long as we have the URL cached
                $og_image = get_post_meta( $this->postID, 'mashsb_open_thumbnail_url', true );
                if( $og_image ):
                    $info['header_output'] .= PHP_EOL . '<meta property="og:image" content="' . $og_image . '" />';
                endif;

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH URL & Site Name						         *
             *                                                                *
             * **************************************************************** */

            $info['header_output'] .= PHP_EOL . '<meta property="og:url" content="' . get_permalink() . '" />';
            $info['header_output'] .= PHP_EOL . '<meta property="og:site_name" content="' . get_bloginfo( 'name' ) . '" />';

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH AUTHOR									         *
             *                                                                *
             * **************************************************************** */

            // Add the Facebook Author URL
            if( get_the_author_meta( 'mashsb_fb_author', mashsb_get_author( $this->postID ) ) ):

                // Output the Facebook Author URL
                $facebook_author = get_the_author_meta( 'mashsb_fb_author', mashsb_get_author( $this->postID ) );
                $info['header_output'] .= PHP_EOL . '<meta property="article:author" content="' . $facebook_author . '" />';

            elseif( get_the_author_meta( 'facebook', mashsb_get_author( $this->postID ) ) && defined( 'WPSEO_VERSION' ) ):

                // Output the Facebook Author URL
                $facebook_author = get_the_author_meta( 'facebook', mashsb_get_author( $this->postID ) );
                $info['header_output'] .= PHP_EOL . '<meta property="article:author" content="' . $facebook_author . '" />';

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH PUBLISHER								         *
             *                                                                *
             * **************************************************************** */

            // If they have a Facebook Publisher URL in our settings...
            if( isset( $info['mashsb_user_options']['facebookPublisherUrl'] ) && $info['mashsb_user_options']['facebookPublisherUrl'] != '' ):

                // Output the Publisher URL
                $info['header_output'] .= PHP_EOL . '<meta property="article:publisher" content="' . $info['mashsb_user_options']['facebookPublisherUrl'] . '" />';

            // If they have a Facebook Publisher URL in Yoast's settings...
            elseif( isset( $wpseo_social ) && isset( $wpseo_social['facebook_site'] ) && $wpseo_social['facebook_site'] != '' ):

                // Output the Publisher URL
                $info['header_output'] .= PHP_EOL . '<meta property="article:publisher" content="' . $wpseo_social['facebook_site'] . '" />';
            endif;

            $info['header_output'] .= PHP_EOL . '<meta property="article:published_time" content="' . get_post_time( 'c' ) . '" />';
            $info['header_output'] .= PHP_EOL . '<meta property="article:modified_time" content="' . get_post_modified_time( 'c' ) . '" />';
            $info['header_output'] .= PHP_EOL . '<meta property="og:updated_time" content="' . get_post_modified_time( 'c' ) . '" />';

            /*             * ***************************************************************
             *                                                                *
             *     OPEN GRAPH APP ID									         *
             *                                                                *
             * **************************************************************** */

            // If the Facebook APP ID is in our settings...
            if( isset( $info['mashsb_user_options']['facebookAppID'] ) && $info['mashsb_user_options']['facebookAppID'] != '' ):

                // Output the Facebook APP ID
                $info['header_output'] .= PHP_EOL . '<meta property="fb:app_id" content="' . $info['mashsb_user_options']['facebookAppID'] . '" />';

            // If the Facebook APP ID is set in Yoast's settings...
            elseif( isset( $wpseo_social ) && isset( $wpseo_social['fbadminapp'] ) && $wpseo_social['fbadminapp'] != '' ):

                // Output the Facebook APP ID
                $info['header_output'] .= PHP_EOL . '<meta property="fb:app_id" content="' . $wpseo_social['fbadminapp'] . '" />';

            else:

                // Output the Facebook APP ID
                $info['header_output'] .= PHP_EOL . '<meta property="fb:app_id" content="529576650555031" />';

            endif;

        endif;
    endif;

    // Return the variable containing our information for the meta tags
    return $info;
}

/* * ***************************************************************
 *                                                                *
 *   TWITTER CARDS		 							             *
 *                                                                *
 * 	Dev Notes: If the user has Twitter cards turned on, we		 *
 * 	need to generate them, but we also like Yoast so we'll		 *
 * 	pay attention to their settings as well. Here's the order	 *
 * 	of preference for each field:								 *
 * 	1. Did the user fill out the Social Media field?			 *
 * 	2. Did the user fill out the Yoast Twitter Field?			 *
 * 	3. Did the user fill out the Yoast SEO field?				 *
 * 	4. We'll auto generate something logical from the post.		 *
 * 																 *
 * **************************************************************** */

function mashsb_add_twitter_card( $info ) {
    if( is_singular() ):
        // Check if Twitter Cards are Activated
        if( $info['mashsb_user_options']['mashsb_twitter_card'] ):

            /*             * ***************************************************************
             *                                                                *
             *     YOAST SEO: It rocks, so let's coordinate with it	         *
             *                                                                *
             * **************************************************************** */

            // Check if Yoast Exists so we can coordinate output with their plugin accordingly
            if( defined( 'WPSEO_VERSION' ) ):

                // Collect their Social Descriptions as backups if they're not defined in ours
                $yoast_twitter_title = get_post_meta( $this->postID, '_yoast_wpseo_twitter-title', true );
                $yoast_twitter_description = get_post_meta( $this->postID, '_yoast_wpseo_twitter-description', true );
                $yoast_twitter_image = get_post_meta( $this->postID, '_yoast_wpseo_twitter-image', true );

                // Collect their SEO fields as 3rd string backups in case we need them
                $yoast_seo_title = get_post_meta( $this->postID, '_yoast_wpseo_title', true );
                $yoast_seo_description = get_post_meta( $this->postID, '_yoast_wpseo_metadesc', true );

                // Cancel their output if ours have been defined so we don't have two sets of tags
                remove_action( 'wpseo_head', array('WPSEO_Twitter', 'get_instance'), 40 );

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     JET PACK: If ours are activated, disable theirs	         *
             *                                                                *
             * **************************************************************** */

            if( class_exists( 'JetPack' ) ) :

                add_filter( 'jetpack_disable_twitter_cards', '__return_true', 99 );

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     TWITTER TITLE										         *
             *                                                                *
             * **************************************************************** */

            // If the user defined a Social Media title, use it, otherwise check for Yoast's
            if( !$info['title'] && isset( $yoast_twitter_title ) && $yoast_twitter_title ):

                $info['title'] = $yoast_twitter_title;

            // If not title has been defined, let's check the SEO description as a 3rd string option
            elseif( !$info['title'] && isset( $yoast_seo_title ) && $yoast_seo_title ):

                $info['title'] = $yoast_seo_title;

            // If not title has been defined, let's use the post title
            elseif( !$info['title'] ):

                $info['title'] = convert_smart_quotes( htmlspecialchars_decode( get_the_title() ) );

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     TWITTER DESCRIPTION								         *
             *                                                                *
             * **************************************************************** */

            // Open Graph Description
            if( !$info['description'] && isset( $yoast_twitter_description ) && $yoast_twitter_description ):

                $info['description'] = $yoast_twitter_description;

            // If not title has been defined, let's check the SEO description as a 3rd string option
            elseif( !$info['description'] && isset( $yoast_seo_description ) && $yoast_seo_description ):

                $info['description'] = $yoast_seo_description;

            // If not, then let's use the excerpt
            elseif( !$info['description'] ):

                $info['description'] = convert_smart_quotes( htmlspecialchars_decode( mashsb_get_excerpt_by_id( $this->postID ) ) );

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     TWITTER IMAGE								         *
             *                                                                *
             * **************************************************************** */

            // Open Graph Description
            if( !$info['imageURL'] && isset( $yoast_twitter_image ) && $yoast_twitter_image ):

                $info['imageURL'] = $yoast_twitter_image;

            else:

                // If nothing else is defined, let's use the post Thumbnail as long as we have the URL cached
                $twitter_image = get_post_meta( $this->postID, 'mashsb_open_thumbnail_url', true );
                if( $twitter_image ):
                    $info['imageURL'] = $twitter_image;
                endif;

            endif;

            /*             * ***************************************************************
             *                                                                *
             *     PUT IT ALL TOGETHER						         		 *
             *                                                                *
             * **************************************************************** */

            // Check if we have everything we need for a large image summary card
            if( $info['imageURL'] ):
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:card" content="summary_large_image">';
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:title" content="' . $info['title'] . '">';
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:description" content="' . $info['description'] . '">';
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:image" content="' . $info['imageURL'] . '">';
                if( $info['mashsb_user_options']['twitterID'] ):
                    $info['header_output'] .= PHP_EOL . '<meta name="twitter:site" content="@' . $info['mashsb_user_options']['twitterID'] . '">';
                endif;
                if( $info['user_twitter_handle'] ):
                    $info['header_output'] .= PHP_EOL . '<meta name="twitter:creator" content="@' . str_replace( '@', '', $info['user_twitter_handle'] ) . '">';
                endif;

            // Otherwise create a small summary card
            else:
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:card" content="summary">';
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:title" content="' . str_replace( '"', '\'', $info['title'] ) . '">';
                $info['header_output'] .= PHP_EOL . '<meta name="twitter:description" content="' . str_replace( '"', '\'', $info['description'] ) . '">';
                if( $info['mashsb_user_options']['twitterID'] ):
                    $info['header_output'] .= PHP_EOL . '<meta name="twitter:site" content="@' . $info['mashsb_user_options']['twitterID'] . '">';
                endif;
                if( $info['user_twitter_handle'] ):
                    $info['header_output'] .= PHP_EOL . '<meta name="twitter:creator" content="@' . str_replace( '@', '', $info['user_twitter_handle'] ) . '">';
                endif;
            endif;

        endif;
    endif;
    return $info;
}

/* * ***************************************************************
 *                                                                *
 *          Frame Buster 							             *
 *                                                                *
 * **************************************************************** */

function mashsb_frame_buster( $info ) {
    if( $info['mashsb_user_options']['sniplyBuster'] == true ):
        $info['header_output'] .= PHP_EOL . '<script type="text/javascript">function parentIsEvil() { var html = null; try { var doc = top.location.pathname; } catch(err){ }; if(typeof doc === "undefined") { return true } else { return false }; }; if (parentIsEvil()) { top.location = self.location.href; };var url = "' . get_permalink() . '";if(url.indexOf("stfi.re") != -1) { var canonical = ""; var links = document.getElementsByTagName("link"); for (var i = 0; i < links.length; i ++) { if (links[i].getAttribute("rel") === "canonical") { canonical = links[i].getAttribute("href")}}; canonical = canonical.replace("?sfr=1", "");top.location = canonical; console.log(canonical);};</script>';
    endif;
    return $info;
}

/* * ***************************************************************
 *                                                                *
 *          CUSTOM COLORS 							             *
 *                                                                *
 * **************************************************************** */

function mashsb_output_custom_color( $info ) {
    if( $info['mashsb_user_options']['dColorSet'] == 'customColor' || $info['mashsb_user_options']['iColorSet'] == 'customColor' || $info['mashsb_user_options']['oColorSet'] == 'customColor' ):
        $info['header_output'] .= PHP_EOL . '<style type="text/css">.nc_socialPanel.mashsb_d_customColor a, html body .nc_socialPanel.mashsb_i_customColor .nc_tweetContainer:hover a, body .nc_socialPanel.mashsb_o_customColor:hover a {color:white} .nc_socialPanel.mashsb_d_customColor .nc_tweetContainer, html body .nc_socialPanel.mashsb_i_customColor .nc_tweetContainer:hover, body .nc_socialPanel.mashsb_o_customColor:hover .nc_tweetContainer {background-color:' . $info['mashsb_user_options']['customColor'] . ';border:1px solid ' . $info['mashsb_user_options']['customColor'] . ';} </style>';
    endif;

    if( $info['mashsb_user_options']['dColorSet'] == 'ccOutlines' || $info['mashsb_user_options']['iColorSet'] == 'ccOutlines' || $info['mashsb_user_options']['oColorSet'] == 'ccOutlines' ):
        $info['header_output'] .= PHP_EOL . '<style type="text/css">.nc_socialPanel.mashsb_d_ccOutlines a, html body .nc_socialPanel.mashsb_i_ccOutlines .nc_tweetContainer:hover a, body .nc_socialPanel.mashsb_o_ccOutlines:hover a { color:' . $info['mashsb_user_options']['customColor'] . '; }
.nc_socialPanel.mashsb_d_ccOutlines .nc_tweetContainer, html body .nc_socialPanel.mashsb_i_ccOutlines .nc_tweetContainer:hover, body .nc_socialPanel.mashsb_o_ccOutlines:hover .nc_tweetContainer { background:transparent; border:1px solid ' . $info['mashsb_user_options']['customColor'] . '; } </style>';

    endif;
    return $info;
}
